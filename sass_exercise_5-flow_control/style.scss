$color: red;
$border-color: blue;
$bordersize: 1;

@use "functions.scss" as f;

@mixin article-card($color1, $color2, $size) {
    border: f.rem($size) solid $color2;
    text-align: center;

    &:nth-child(odd) {
        color: $color1;
    }
    &:nth-child(even) {
        color: $color2;
    }
}

%text {
    color: $border-color;
    padding: 1rem;
    margin: f.rem(1);
    justify-self: center;
    
}

div {
    display: flex;
    flex: 1;
    flex-direction: column;
    border: 1px solid $color;
    align-items: center;
    gap: 1rem;
    padding: 1rem;

    section {
        display: flex;
    }

    section:nth-child(4) {      
        display: flex;
        gap: 10px;        
        

        div{
            width: f.rem(45);
            height: f.rem(45);
            border: f.rem(2) solid $border-color;            
        }
        $sizes: (1rem,2rem,3rem);
        
        @for $index from 1 through 20 {
            div:nth-child(#{$index}){
                background-color: darken(white,$index * 5%);
                color: lighten(black,$index * 5%);
                font-size: nth($sizes, ($index - 1) % length($sizes) + 1); // this code sets the font-size of each div based on the value from the $sizes map, which is indexed by the remainder of ($index - 1) divided by the length of the $sizes map, plus 1.
            }

            
            @if $index == 10 {
                div:nth-child(#{$index}){
                    color: red;
                    background-color: blue;
                }
            }
        } 
        
      }

    h1 {
        color: green;
        text-decoration: underline;
        text-decoration-color: gray;
        @extend %text
    }

    h2{
        border: 1px solid $color;
        @extend %text
    }

    article {
        @include article-card($color, $border-color, $bordersize);
    }
}
